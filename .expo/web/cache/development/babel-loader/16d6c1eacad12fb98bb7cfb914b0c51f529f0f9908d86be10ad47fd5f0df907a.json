{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useEffect, useState } from \"react\";\nimport PostCard1 from \"./PostCard1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RandomUser2 = function RandomUser2() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    Data = _useState2[0],\n    setData = _useState2[1];\n  var getRandomUser = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var response = yield fetch('https://randomuser.me/api/', {\n        method: \"GET\"\n      });\n      return yield response.json();\n    });\n    return function getRandomUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getRandomUser().then(function (data) {\n      setData(data);\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: Data ? Data.map(function (e) {\n      return _jsx(PostCard1, {\n        Mytitle: e.title,\n        Mybody: e.body\n      }, e.id);\n    }) : _jsx(Text, {\n      style: styles.noData,\n      children: \"No Data Found\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f0f0f0'\n  },\n  noData: {\n    fontSize: 16,\n    textAlign: 'center',\n    margin: 20,\n    color: 'red'\n  }\n});\nexport default RandomUser2;","map":{"version":3,"names":["React","View","Text","StyleSheet","useEffect","useState","PostCard1","jsx","_jsx","RandomUser2","_useState","_useState2","_slicedToArray","Data","setData","getRandomUser","_ref","_asyncToGenerator","response","fetch","method","json","apply","arguments","then","data","style","styles","container","children","map","e","Mytitle","title","Mybody","body","id","noData","create","flex","padding","backgroundColor","fontSize","textAlign","margin","color"],"sources":["C:/Users/jutt computer/OneDrive/Desktop/REACT NATIVE/Fetch/RandomUser2.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet} from 'react-native';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PostCard1 from \"./PostCard1\";\r\n\r\nconst RandomUser2 = () => {\r\n    //This state will hold the data fetched from the API.\r\n    const [Data, setData] = useState(null);\r\n\r\n    const getRandomUser = async() => {\r\n        const response = await fetch('https://randomuser.me/api/', {\r\n            method: \"GET\"\r\n        });\r\n        // Converting the data into an object format\r\n        return await response.json();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRandomUser().then((data) => {\r\n            setData(data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {Data ? Data.map((e) => (\r\n                // names of the props given here are Mytitle and Mybody\r\n                <PostCard1 key={e.id} Mytitle={e.title} Mybody={e.body} />\r\n            )) : <Text style={styles.noData}>No Data Found</Text>}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        backgroundColor: '#f0f0f0',\r\n    },\r\n    noData: {\r\n        fontSize: 16,\r\n        textAlign: 'center',\r\n        margin: 20,\r\n        color: 'red',\r\n    },\r\n});\r\n\r\nexport default RandomUser2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAEpC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAEtB,IAAAC,SAAA,GAAwBL,QAAQ,CAAC,IAAI,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,aAAa;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAW;MAC7B,IAAMC,QAAQ,SAASC,KAAK,CAAC,4BAA4B,EAAE;QACvDC,MAAM,EAAE;MACZ,CAAC,CAAC;MAEF,aAAaF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChC,CAAC;IAAA,gBANKN,aAAaA,CAAA;MAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMlB;EAEDnB,SAAS,CAAC,YAAM;IACZW,aAAa,CAAC,CAAC,CAACS,IAAI,CAAC,UAACC,IAAI,EAAK;MAC3BX,OAAO,CAACW,IAAI,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OACIjB,IAAA,CAACP,IAAI;IAACyB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EACzBhB,IAAI,GAAGA,IAAI,CAACiB,GAAG,CAAC,UAACC,CAAC;MAAA,OAEfvB,IAAA,CAACF,SAAS;QAAY0B,OAAO,EAAED,CAAC,CAACE,KAAM;QAACC,MAAM,EAAEH,CAAC,CAACI;MAAK,GAAvCJ,CAAC,CAACK,EAAuC,CAAC;IAAA,CAC7D,CAAC,GAAG5B,IAAA,CAACN,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACU,MAAO;MAAAR,QAAA,EAAC;IAAa,CAAM;EAAC,CACnD,CAAC;AAEf,CAAC;AAED,IAAMF,MAAM,GAAGxB,UAAU,CAACmC,MAAM,CAAC;EAC7BV,SAAS,EAAE;IACPW,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACrB,CAAC;EACDJ,MAAM,EAAE;IACJK,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAepC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}