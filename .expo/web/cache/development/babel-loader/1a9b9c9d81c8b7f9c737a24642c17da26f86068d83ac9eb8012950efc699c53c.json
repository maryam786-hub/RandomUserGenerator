{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useEffect } from \"react\";\nimport UserCard2 from \"./UserCard2\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RandomUser2 = function RandomUser2() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    Data = _useState2[0],\n    setData = _useState2[1];\n  var getRandomUser = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var response = yield fetch(\"https://randomuser.me/api/\", {\n        method: \"GET\"\n      });\n      return yield response.json();\n    });\n    return function getRandomUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getRandomUser().then(function (data) {\n      setData(data.results[0]);\n    });\n  }, []);\n  var handleRefresh = function handleRefresh() {\n    getRandomUser().then(function (data) {\n      setData(data.results[0]);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [Data ? _jsx(UserCard2, {\n      UserData: Data\n    }) : _jsx(Text, {\n      style: styles.noData,\n      children: \"No Data Found\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.refreshButton,\n      onPress: handleRefresh,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Refresh\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: \"#f0f0f0\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  noData: {\n    fontSize: 16,\n    textAlign: \"center\",\n    margin: 20,\n    color: \"red\"\n  },\n  refreshButton: {\n    backgroundColor: \"blue\",\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 20\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign: \"center\"\n  }\n});\nexport default RandomUser2;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","useEffect","UserCard2","jsx","_jsx","jsxs","_jsxs","RandomUser2","_useState","_useState2","_slicedToArray","Data","setData","getRandomUser","_ref","_asyncToGenerator","response","fetch","method","json","apply","arguments","then","data","results","handleRefresh","style","styles","container","children","UserData","noData","refreshButton","onPress","buttonText","create","flex","padding","backgroundColor","justifyContent","alignItems","fontSize","textAlign","margin","color","borderRadius","marginTop"],"sources":["C:/Users/jutt computer/OneDrive/Desktop/REACT NATIVE/Fetch/RandomUser2.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport UserCard2 from \"./UserCard2\";\r\n\r\nconst RandomUser2 = () => {\r\n  // This state will hold the data fetched from the API.\r\n  const [Data, setData] = useState(null);\r\n\r\n  const getRandomUser = async () => {\r\n    const response = await fetch(\"https://randomuser.me/api/\", {\r\n      method: \"GET\",\r\n    });\r\n    // Converting the data into an object format\r\n    return await response.json();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRandomUser().then((data) => {\r\n      setData(data.results[0]);\r\n    });\r\n  }, []);\r\n\r\n  const handleRefresh = () => {\r\n    getRandomUser().then((data) => {\r\n      setData(data.results[0]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {Data ? (\r\n        //As the data for this url is an object so we cant use map function\r\n        <UserCard2 UserData={Data} />\r\n      ) : (\r\n        <Text style={styles.noData}>No Data Found</Text>\r\n      )}\r\n\r\n      <TouchableOpacity style={styles.refreshButton} onPress={handleRefresh}>\r\n        <Text style={styles.buttonText}>Refresh</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: \"#f0f0f0\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  noData: {\r\n    fontSize: 16,\r\n    textAlign: \"center\",\r\n    margin: 20,\r\n    color: \"red\",\r\n  },\r\n  refreshButton: {\r\n    backgroundColor: \"blue\",\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    marginTop: 20,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default RandomUser2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,SAAS,QAAQ,OAAO;AAEjC,OAAOC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAExB,IAAAC,SAAA,GAAwBZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,aAAa;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAChC,IAAMC,QAAQ,SAASC,KAAK,CAAC,4BAA4B,EAAE;QACzDC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,aAAaF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC9B,CAAC;IAAA,gBANKN,aAAaA,CAAA;MAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMlB;EAEDpB,SAAS,CAAC,YAAM;IACdY,aAAa,CAAC,CAAC,CAACS,IAAI,CAAC,UAACC,IAAI,EAAK;MAC7BX,OAAO,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1BZ,aAAa,CAAC,CAAC,CAACS,IAAI,CAAC,UAACC,IAAI,EAAK;MAC7BX,OAAO,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC;EAED,OACElB,KAAA,CAACT,IAAI;IAAC6B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC3BlB,IAAI,GAEHP,IAAA,CAACF,SAAS;MAAC4B,QAAQ,EAAEnB;IAAK,CAAE,CAAC,GAE7BP,IAAA,CAACN,IAAI;MAAC4B,KAAK,EAAEC,MAAM,CAACI,MAAO;MAAAF,QAAA,EAAC;IAAa,CAAM,CAChD,EAEDzB,IAAA,CAACJ,gBAAgB;MAAC0B,KAAK,EAAEC,MAAM,CAACK,aAAc;MAACC,OAAO,EAAER,aAAc;MAAAI,QAAA,EACpEzB,IAAA,CAACN,IAAI;QAAC4B,KAAK,EAAEC,MAAM,CAACO,UAAW;QAAAL,QAAA,EAAC;MAAO,CAAM;IAAC,CAC9B,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAG5B,UAAU,CAACoC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,SAAS;IAC1BC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDT,MAAM,EAAE;IACNU,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT,CAAC;EACDZ,aAAa,EAAE;IACbM,eAAe,EAAE,MAAM;IACvBD,OAAO,EAAE,EAAE;IACXQ,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDZ,UAAU,EAAE;IACVU,KAAK,EAAE,OAAO;IACdH,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAenC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}